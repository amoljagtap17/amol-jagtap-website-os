// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Profile {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName   String
  lastName    String
  title       String
  description String
  image       String
  experience  Int
  projects    Int
  linkedinUrl String
  githubUrl   String
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("profiles")
}

model Biography {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  intro     String
  summary   String[]
  closing   String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("biographies")
}

model Skill {
  id         String        @id @default(auto()) @map("_id") @db.ObjectId
  category   SkillCategory
  name       String
  percentage Int           @default(0)
  createdAt  DateTime      @default(now()) @map("created_at")
  updatedAt  DateTime      @updatedAt @map("updated_at")

  @@map("skills")
}

enum SkillCategory {
  PRIMARY
  SECONDARY
}

model Portfolio {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  content     String
  image       String
  previewUrl  String
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("portfolios")
}

model BingeWatch {
  id          String             @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  channel     BingeWatchChannel
  category    BingeWatchCategory
  genre       BingeWatchGenre
  rating      Float              @default(0)
  createdAt   DateTime           @default(now()) @map("created_at")
  updatedAt   DateTime           @updatedAt @map("updated_at")

  @@map("binge_watches")
}

enum BingeWatchGenre {
  ACTION
  COMEDY
  DRAMA
  HORROR
  ROMANCE
  THRILLER
  SCI_FI
  FANTASY
  ANIMATION
  EDUCATIONAL
}

enum BingeWatchCategory {
  MOVIES
  WEB_SERIES
  COURSES
}

enum BingeWatchChannel {
  NETFLIX
  AMAZON_PRIME
  HOTSTAR
  APPLE_TV
  YOUTUBE
  UDEMY
  UDACITY
  COURSERA
  PLURALSIGHT
}

model Favorite {
  id                 String           @id @default(auto()) @map("_id") @db.ObjectId
  value              String
  cite               String?
  category           FavoriteCategory @relation(fields: [favoriteCategoryId], references: [id], onDelete: Cascade)
  createdAt          DateTime         @default(now()) @map("created_at")
  updatedAt          DateTime         @updatedAt @map("updated_at")
  favoriteCategoryId String           @db.ObjectId

  @@map("favorites")
}

model FavoriteCategory {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  createdAt   DateTime   @default(now()) @map("created_at")
  updatedAt   DateTime   @updatedAt @map("updated_at")
  favorites   Favorite[]

  @@map("favorite_categories")
}
